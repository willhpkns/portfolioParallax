name: Build and Deploy
on:
  push:
    branches: [ "backend" ]
  workflow_dispatch:

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4

      # compute lowercase image path for GHCR
      - name: Compute lowercase image name
        run: |
          OWNER="${{ github.repository_owner }}"
          REPO="${{ github.event.repository.name }}"
          echo "IMAGE=ghcr.io/$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')/$(echo "$REPO" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR (push)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ env.IMAGE }}:backend-latest
            ${{ env.IMAGE }}:backend-${{ github.sha }}

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy on VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            set -e
            cd /srv/web
            # login for private pulls (uses your repo secrets)
            docker login ghcr.io -u "${{ secrets.GHCR_USER }}" -p "${{ secrets.GHCR_TOKEN }}"
            # point compose to the lowercase image + backend tag (idempotent)
            OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            REPO_LC=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
            IMAGE="ghcr.io/${OWNER_LC}/${REPO_LC}:backend-latest"
            sed -i -E '/^  app:/,/^[^ ]/ s|^[[:space:]]*image:.*|    image: '"$IMAGE"'|' docker-compose.yml
            # remove the old demo command if it ever sneaks back
            sed -i -E '/^  app:/,/^[^ ]/ s/^[[:space:]]*command:.*//g' docker-compose.yml
            docker-compose pull app
            docker-compose up -d --force-recreate --no-deps app
            curl -fsS https://willhpkns.soon.it >/dev/null
            docker image prune -f
